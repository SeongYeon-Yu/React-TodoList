{"ast":null,"code":"import _objectSpread from\"C:/Users/lg/Desktop/project/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/lg/Desktop/project/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useCallback}from'react';import TodoTemplate from'./TodoTemplate';import TodoInsert from'./TodoInsert';import TodoList from'./TodoList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function createBulkTodos(){var array=[];for(var i=1;i<=2500;i++){array.push({id:i,text:\"\\uD560 \\uC77C \".concat(i),checked:false});}return array;}var App=function App(){var _useState=useState(createBulkTodos),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var nextId=useRef(4);var onInsert=useCallback(function(text){var todo={id:nextId.current,text:text,checked:false};setTodos(function(todos){return todos.concat(todo);});nextId.current+=1;});var onRemove=useCallback(function(id){setTodos(function(todos){return todos.filter(function(todo){return todo.id!==id;});});});var onToggle=useCallback(function(id){setTodos(function(todos){return todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{checked:!todo.checked}):todo;});});});return/*#__PURE__*/_jsxs(TodoTemplate,{children:[/*#__PURE__*/_jsx(TodoInsert,{onInsert:onInsert}),/*#__PURE__*/_jsx(TodoList,{todos:todos,onRemove:onRemove,onToggle:onToggle})]});};export default App;","map":{"version":3,"sources":["C:/Users/lg/Desktop/project/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","createBulkTodos","array","i","push","id","text","checked","App","todos","setTodos","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":"qTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,WAAlC,KAAqD,OAArD,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,QAASC,CAAAA,eAAT,EAA0B,CACxB,GAAMC,CAAAA,KAAK,CAAE,EAAb,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,EAAE,IAAf,CAAoBA,CAAC,EAArB,CAAwB,CACtBD,KAAK,CAACE,IAAN,CAAW,CACTC,EAAE,CAACF,CADM,CAETG,IAAI,yBAAQH,CAAR,CAFK,CAGTI,OAAO,CAAC,KAHC,CAAX,EAKD,CACD,MAAOL,CAAAA,KAAP,CACD,CACD,GAAMM,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACUb,QAAQ,CAACM,eAAD,CADlB,wCACTQ,KADS,eACFC,QADE,eAEhB,GAAMC,CAAAA,MAAM,CAAGf,MAAM,CAAC,CAAD,CAArB,CAEA,GAAMgB,CAAAA,QAAQ,CAAGf,WAAW,CAC1B,SAACS,IAAD,CAAU,CACR,GAAMO,CAAAA,IAAI,CAAG,CACXR,EAAE,CAAEM,MAAM,CAACG,OADA,CAEXR,IAAI,CAAJA,IAFW,CAGXC,OAAO,CAAE,KAHE,CAAb,CAKAG,QAAQ,CAAC,SAAAD,KAAK,QAAGA,CAAAA,KAAK,CAACM,MAAN,CAAaF,IAAb,CAAH,EAAN,CAAR,CACAF,MAAM,CAACG,OAAP,EAAkB,CAAlB,CACD,CATyB,CAA5B,CAWA,GAAME,CAAAA,QAAQ,CAAGnB,WAAW,CAC1B,SAACQ,EAAD,CAAQ,CACNK,QAAQ,CAAC,SAAAD,KAAK,QAAEA,CAAAA,KAAK,CAACQ,MAAN,CAAa,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACR,EAAL,GAAYA,EAAtB,EAAb,CAAF,EAAN,CAAR,CACD,CAHyB,CAA5B,CAKA,GAAMa,CAAAA,QAAQ,CAAGrB,WAAW,CAC1B,SAACQ,EAAD,CAAQ,CACNK,QAAQ,CAAC,SAAAD,KAAK,QACZA,CAAAA,KAAK,CAACU,GAAN,CAAU,SAACN,IAAD,QACRA,CAAAA,IAAI,CAACR,EAAL,GAAYA,EAAZ,gCAAsBQ,IAAtB,MAA4BN,OAAO,CAAE,CAACM,IAAI,CAACN,OAA3C,GAAuDM,IAD/C,EAAV,CADY,EAAN,CAAR,CAKD,CAPyB,CAA5B,CASA,mBACE,MAAC,YAAD,yBACE,KAAC,UAAD,EAAY,QAAQ,CAAED,QAAtB,EADF,cAEE,KAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,CAAwB,QAAQ,CAAEO,QAAlC,CAA4C,QAAQ,CAAEE,QAAtD,EAFF,GADF,CAMD,CAnCD,CAoCA,cAAeV,CAAAA,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './TodoTemplate';\nimport TodoInsert from './TodoInsert';\nimport TodoList from './TodoList';\n\nfunction createBulkTodos(){\n  const array =[];\n  for(let i=1;i<=2500;i++){\n    array.push({\n      id:i,\n      text:`할 일 ${i}`,\n      checked:false,\n    });\n  }\n  return array;\n}\nconst App = () => {\n  const [todos, setTodos] = useState(createBulkTodos)\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos =>todos.concat(todo));\n      nextId.current += 1;\n    },\n  );\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos=>todos.filter((todo) => todo.id !== id));\n    },\n  );\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(todos=>\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n  );\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}